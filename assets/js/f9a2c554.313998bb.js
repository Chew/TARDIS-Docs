"use strict";(self.webpackChunktardis_docs=self.webpackChunktardis_docs||[]).push([[3644],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?o.createElement(f,i(i({ref:n},p),{},{components:t})):o.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},80911:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=t(87462),r=(t(67294),t(3905));const a={layout:"default",title:"Monsters configuration"},i="Monsters configuration",l={unversionedId:"configuration/configuration-monsters",id:"configuration/configuration-monsters",title:"Monsters configuration",description:"The default monsters.yml configuration is shown below:",source:"@site/docs/configuration/configuration-monsters.md",sourceDirName:"configuration",slug:"/configuration/configuration-monsters",permalink:"/TARDIS-Docs/configuration/configuration-monsters",draft:!1,editUrl:"https://github.com/Chew/TARDIS-Docs/tree/master/docs/configuration/configuration-monsters.md",tags:[],version:"current",frontMatter:{layout:"default",title:"Monsters configuration"},sidebar:"docs",previous:{title:"Room growth configuration options",permalink:"/TARDIS-Docs/configuration/configuration-growth"},next:{title:"Room configuration",permalink:"/TARDIS-Docs/configuration/configuration-rooms"}},s={},c=[{value:"Spawn rates",id:"spawn-rates",level:2},{value:"For each monster type",id:"for-each-monster-type",level:2},{value:"Angel specific",id:"angel-specific",level:2},{value:"Cybermen specific",id:"cybermen-specific",level:2},{value:"Dalek specific",id:"dalek-specific",level:2},{value:"Headless Monk specific",id:"headless-monk-specific",level:2},{value:"Judoon specific",id:"judoon-specific",level:2},{value:"K-9 specific",id:"k-9-specific",level:2},{value:"Ood specific",id:"ood-specific",level:2},{value:"Sontaran specific",id:"sontaran-specific",level:2},{value:"Toclafane specific",id:"toclafane-specific",level:2}],p={toc:c},d="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"monsters-configuration"},"Monsters configuration"),(0,r.kt)("p",null,"The default ",(0,r.kt)("em",{parentName:"p"},"monsters.yml")," configuration is shown below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="/plugins/TARDIS/monsters.yml"',title:'"/plugins/TARDIS/monsters.yml"'},"config_version: 2.0\nspawn_rate:\n  how_many: 2\n  how_often: 400\n  default_max: 0\nangels:\n  worlds:\n    world: 10\n  teleport_to_location: false\n  teleport_locations:\n    - world,0,64,0\n  teleport_worlds:\n    - world\n  freeze_time: 100\n  weapon: DIAMOND_PICKAXE\n  drops:\n    - COBBLESTONE\n    - STONE\n  angels_can_steal: true\n  can_build: true\n  spawn_from_chat:\n    enabled: true\n    chance: 50\n    distance_from_player: 10\ncybermen:\n  worlds:\n    world: 10\n  drops:\n    - REDSTONE\n    - STONE_BUTTON\n  can_upgrade: true\ndaleks:\n  worlds:\n    world: 10\n  drops:\n    - SLIME_BALL\n    - ROTTEN_FLESH\n  dalek_sec_chance: 5\n  dalek_sec_drops:\n    - VERDANT_FROGLIGHT\n    - LEATHER_CHESTPLATE\n  davros_chance: 5\n  davros_drops:\n    - CHAIN\n    - CRIMSON_BUTTON\nempty_child:\n  worlds:\n    world: 10\n  drops:\n    - COOKED_BEEF\n    - SUGAR\nhath:\n  worlds:\n    world: 10\n  drops:\n    - SALMON\n    - STONE_PICKAXE\nheadless_monks:\n  worlds:\n    world: 10\n  drops:\n    - BOOK\n    - RED_CANDLE\n  projectile: SMALL_FIREBALL\n  particles: true\nice_warriors:\n  worlds:\n    world: 10\n  drops:\n    - ICE\n    - PACKED_ICE\n    - SNOW_BLOCK\njudoon:\n  worlds:\n    world: 10\n  guards: true\n  can_build: true\n  ammunition: 25\n  damage: 4\nk9:\n  by_taming: true\n  can_build: true\n  worlds:\n    world: true\nood:\n  worlds:\n    world: true\n  drops:\n    - NAME_TAG\n  spawn_from_villager: 20\n  spawn_from_cured: 5\nracnoss:\n  worlds:\n    world_nether: 5\n  drops:\n    - NETHERITE_INGOT\n    - ECHO_SHARD\nsea_devils:\n  worlds:\n    world: 10\n  drops:\n    - COD\n    - KELP\nsilent:\n  worlds:\n    world: 10\n  drops:\n    - INK_SAC\n    - FLOWER_POT\nsilurians:\n  worlds:\n    world: 10\n  drops:\n    - GOLD_NUGGET\n    - FEATHER\nslitheen:\n  worlds:\n    world: 10\n  drops:\n    - RABBIT_HIDE\n    - PHANTOM_MEMBRANE\nsontarans:\n  worlds:\n    world: 10\n  drops:\n    - POTATO\n    - POISONOUS_POTATO\n  can_tame: true\nthe_mire:\n  worlds:\n    world: 10\n  drops:\n    - POTION\n    - HONEY_BOTTLE\ntoclafane:\n  worlds:\n    world: 10\n  spawn_from_bee: 5\n  destroy_blocks: true\n  drops:\n    - GUNPOWDER\n    - HONEYCOMB\nvashta_nerada:\n  worlds:\n    world: 10\n  drops:\n    - BONE\n    - LEATHER\nzygons:\n  worlds:\n    world: 10\n  drops:\n    - PAINTING\n    - SAND\n")),(0,r.kt)("h2",{id:"spawn-rates"},"Spawn rates"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"spawn_rate")," section sets monster spawning options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"how_many")," sets how many monsters to spawn each time."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"how_often")," is the time period (in server ticks \u2014 ",(0,r.kt)("em",{parentName:"li"},"20 ticks = 1 second"),") between spawn attempts."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_per_world")," is the maximum number of monsters can be alive at one time.")),(0,r.kt)("h2",{id:"for-each-monster-type"},"For each monster type"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"worlds")," section allows you to list the worlds you want the monsters to spawn in."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"drops")," sets a list of items that drop when the monster is killed."),(0,r.kt)("h2",{id:"angel-specific"},"Angel specific"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"freeze_time")," is the length of time (in server ticks) that the Angels remain motionless for."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"weapon")," sets the item that will kill a Weeping Angel."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"angels_can_steal")," sets whether the Angels can steal your TARDIS Key \u2014 requires the TARDIS plugin to be installed."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"teleport_to_location")," sets whether angles teleport players to random worlds or specific locations."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"teleport_locations")," a list of one or more specific teleport locations to use."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"teleport_worlds")," a list of one or more worlds to for random teleport locations."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"spawn_from_chat")," sets whether mentioning ",(0,r.kt)("em",{parentName:"p"},"weeping angels")," in chat has a chance to spwan an angel nearby."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"can_build")," sets whether angels can be built using a specific sequence of blocks (like a snow golem)."),(0,r.kt)("h2",{id:"cybermen-specific"},"Cybermen specific"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"can_upgrade")," sets whether the Cybermen can upgrade players and villagers."),(0,r.kt)("h2",{id:"dalek-specific"},"Dalek specific"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"dalek_sec_chance")," sets the chance that Dalek Sec will spawn instead of a regular Dalek."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"davros_chance")," sets the chance that Davros will spawn instead of a regular Dalek."),(0,r.kt)("h2",{id:"headless-monk-specific"},"Headless Monk specific"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"projectile")," sets the item used as the monks projectile."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"particles")," sets whether monks have a flaming sword."),(0,r.kt)("h2",{id:"judoon-specific"},"Judoon specific"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"guards")," sets whether Judoon can serve as personal bodyguards."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"can_build")," sets whether Judoon can be built using a specific sequence of blocks (like a snow golem)."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ammunition")," sets the default amount of ammunition Judoon can carry."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"damage")," sets the amount of damage a Judoon projectile will cause when hitting entities."),(0,r.kt)("h2",{id:"k-9-specific"},"K-9 specific"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"by_taming")," sets the chance that K-9 will appear instead of a tamed wolf."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"can_build")," sets whether K-9 can be built using a specific sequence of blocks (like a snow golem)."),(0,r.kt)("h2",{id:"ood-specific"},"Ood specific"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"spawn_from_villager")," sets the chance that an Ood will spawn instead of a villager."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"spawn_from_cured")," sets the chance that an Ood will spawn instead of a cured villager."),(0,r.kt)("h2",{id:"sontaran-specific"},"Sontaran specific"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"can_tame")," sets whether sontarans can to tamed into Strax."),(0,r.kt)("h2",{id:"toclafane-specific"},"Toclafane specific"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"spawn_from_bee")," sets the chance that Toclaface will spawn instead of a bee."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"destroy_blocks")," sets whether toclafane explosions will destroy blocks."))}u.isMDXComponent=!0}}]);