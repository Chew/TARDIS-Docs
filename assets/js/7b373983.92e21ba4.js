"use strict";(self.webpackChunktardis_docs=self.webpackChunktardis_docs||[]).push([[7771],{27263:(e,t,n)=>{n.d(t,{Z:()=>c,w:()=>i});var a=n(67294),s=n(34360),o=n(12699);const i=e=>{const{children:t}=e;return t};function d(e){let{yml:t,cmd:n}=e,s=t[n].aliases;const o="object"==typeof s?s.join(", "):s;return a.createElement(a.Fragment,null,a.createElement("tr",null,a.createElement("td",{className:"indent0",id:n},a.createElement("code",null,"/",n)),a.createElement("td",null,a.createElement("code",null,o)),a.createElement("td",null,a.createElement("code",null,t[n].permission))),a.createElement("tr",null,a.createElement("td",{colSpan:3},t[n].description)),a.createElement("tr",null,a.createElement("td",{colSpan:3},a.createElement("code",null,t[n].usage.replace("<command>",n)))))}function m(e){let{ymlKey:t,value:n,cmd:s}=e,d=n.permission,m=null!=d?"__Permission:__ `"+d+"`":"";return a.createElement(a.Fragment,null,a.createElement("tr",null,a.createElement("td",{className:"indent1"},a.createElement("code",null,t)),a.createElement("td",null,a.createElement(o.D,{children:n.description,components:{p:i}}),a.createElement("br",null),a.createElement(o.D,{children:m,components:{p:i}})),a.createElement("td",null,a.createElement("code",null,n.usage.replace("<command>",s)))))}function c(e){let{data:t,args:n,cmd:o,extra:i}=e;const c=(0,s.Qc)(t),l=(0,s.Qc)(n);let r="",u="";return"false"==i&&(r=a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Command"),a.createElement("th",null,"Aliases"),a.createElement("th",null,"Permission"))),u=a.createElement(d,{key:o,yml:c,cmd:o})),a.createElement(a.Fragment,null,a.createElement("div",{className:"table-responsive"},a.createElement("table",{className:"table table-striped table-bordered"},r,a.createElement("tbody",null,u,a.createElement("tr",null,a.createElement("th",null,"Arguments"),a.createElement("th",null,"Description"),a.createElement("th",null,"Usage")),Object.entries(l).map((e=>{let[t,n]=e;return a.createElement(m,{key:t,ymlKey:t,value:n,indent:0,cmd:o})}))))))}},85768:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>m,toc:()=>l});var a=n(87462),s=(n(67294),n(3905)),o=n(27263);const i={layout:"default",title:"Dev Commands"},d="TARDIS dev commands",m={unversionedId:"commands/dev",id:"commands/dev",title:"Dev Commands",description:"Commands used by eccentric_nz to help with coding and documenting the TARDIS plugin.",source:"@site/docs/commands/dev.mdx",sourceDirName:"commands",slug:"/commands/dev",permalink:"/TARDIS-Docs/commands/dev",draft:!1,editUrl:"https://github.com/Chew/TARDIS-Docs/tree/master/docs/commands/dev.mdx",tags:[],version:"current",frontMatter:{layout:"default",title:"Dev Commands"},sidebar:"docs",previous:{title:"Config Commands",permalink:"/TARDIS-Docs/commands/config"},next:{title:"Give Commands",permalink:"/TARDIS-Docs/commands/give"}},c={},l=[{value:"<code>/tardisdev</code>",id:"tardisdev",level:2},{value:"<code>/tdev displayitem</code>",id:"tdev-displayitem",level:3}],r={toc:l},u="wrapper";function p(e){let{components:t,...i}=e;return(0,s.kt)(u,(0,a.Z)({},r,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"tardis-dev-commands"},"TARDIS dev commands"),(0,s.kt)("p",null,"Commands used by eccentric_nz to help with coding and documenting the TARDIS plugin."),(0,s.kt)("h2",{id:"tardisdev"},(0,s.kt)("inlineCode",{parentName:"h2"},"/tardisdev")),(0,s.kt)(o.Z,{data:"tardisdev:\n        aliases: tdev\n        description: Commands used by eccentric_nz to help with coding and documenting the TARDIS plugin.\n        usage: /<command> [subcommand] [options]...\n        permission: tardis.admin\n    ",args:"\n    add_regions:\n      description: Add missing WorldGuard regions for Bedrock players.\n      usage: /<command> add_regions\n    advancements:\n      description: Checks whether a TARDIS advancement is valid.\n      usage: /<command> advancements [advancement]\n    biome:\n      description: Get the biome the player is looking at.\n      usage: /<command> biome\n    list:\n      description: Lists various options to aid documentation - possible listings are `preset_perms`, `perms`, `recipes`, `blueprints`, `commands`.\n      usage: /<command> list [which] [html|all]\n    stats:\n      description: Display ARS room counts.\n      usage: /<command> stats\n    tree:\n      description: Grows a Huge Fungus Tree on the block the player is targeting. If no further arguments are specified, random blocks are used to grow the tree. You can also specify a block for the stem, hat and decor.\n      usage: /<command> tree [stem] [hat] [decor]\n    plurals:\n      description: Displays a list of block and item names in plural form.\n      usage: /<command> plurals\n    chunky:\n      description: Pre-generates chunks using the Chunky plugin\n      usage: /<command> chunky [world]\n    snapshot:\n      description: Creates a TARDIS Monitor map snapshot. Using the c arguments clears the player's inventory of filled maps. Use in or out to determine which view (interior/exterior) to capture.\n      usage: /<command> snapshot [in|out|c]\n    frame:\n      description: Lock and unlock TARDIS item frames.\n      usage: /<command> frame [lock|unlock]\n    brushable:\n      description: Adds a suspicious sand block to the player's inventory.\n      usage: /<command> brushable\n    box:\n      description: Set the state of the armour stand police box between `open`/`closed`/`stained`/`glass`/`flying`.\n      usage: /<command> box [open|closed|stained|glass|flying]\n    nms:\n      description: Spawn a custom NMS monster.\n      usage: /<command> nms [monster]\n    circuit:\n      description: Give a player a random used TARDIS circuit.\n      usage: /<command> circuit\n    tis:\n      description: Checks and lists TARDIS Information System entries.\n      usage: /<command> tis\n    displayitem:\n      description: Various commands to test Item Display custom blocks and lights - sub-commands are `add`, `remove`, `place`, `break`, `convert`, `chunk`\n      usage: /<command> displayitem [options]... see separate table below.\n",cmd:"tardisdev",extra:"false",mdxType:"CommandTable"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Custom tree",src:n(4774).Z,width:"600",height:"337"})),(0,s.kt)("h3",{id:"tdev-displayitem"},(0,s.kt)("inlineCode",{parentName:"h3"},"/tdev displayitem")),(0,s.kt)(o.Z,{data:"tardisdev:\n        aliases: tdev\n        description: Various commands to test Item Display custom blocks and lights\n        usage: /<command> displayitem [subcommand] [options]...\n        permission: tardis.admin\n    ",args:"\n    add:\n      description: Adds a TARDIS Shop module item (hologram) above the targeted block.\n      usage: /<command> displayitem add\n    remove:\n      description: Removes an Item Display from above the targeted block.\n      usage: /<command> displayitem remove\n    place:\n      description: Places an Item Display custom block on top of the block the player is targeting.\n      usage: /<command> displayitem place [custom block]\n    break:\n      description: Breaks the Item Display custom block the player is targeting and drops the related item.\n      usage: /<command> displayitem break\n    convert:\n      description: Converts old custom mushroom blocks to Item Display custom blocks in TARDIS interiors and ARS rooms.\n      usage: /<command> displayitem convert\n    chunk:\n      description: Deletes all Item Display and Interaction entieies in the chunk the player currently resides in.\n      usage: /<command> displayitem chunk\n    ",cmd:"tardisdev",extra:"true",mdxType:"CommandTable"}))}p.isMDXComponent=!0},4774:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/tree-d7cbe0b856afb19b2ecb03773fd3a54d.jpg"}}]);