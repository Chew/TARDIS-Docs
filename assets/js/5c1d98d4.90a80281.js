"use strict";(self.webpackChunktardis_docs=self.webpackChunktardis_docs||[]).push([[9135],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=a,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},62051:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={layout:"default",title:"Sonic Blaster"},i="Sonic Blaster",s={unversionedId:"sonic-blaster",id:"sonic-blaster",title:"Sonic Blaster",description:"This TARDIS module is a work in progress, and as such the documentation is far from complete!",source:"@site/docs/sonic-blaster.md",sourceDirName:".",slug:"/sonic-blaster",permalink:"/sonic-blaster",draft:!1,editUrl:"https://github.com/Chew/TARDIS-Docs/tree/master/docs/sonic-blaster.md",tags:[],version:"current",frontMatter:{layout:"default",title:"Sonic Blaster"},sidebar:"docs",previous:{title:"TARDIS Shop",permalink:"/tardis-shop"},next:{title:"Admin Stuff",permalink:"/category/admin-stuff"}},l={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Use",id:"use",level:2},{value:"Landing pad",id:"landing-pad",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sonic-blaster"},"Sonic Blaster"),(0,a.kt)("p",null,"This TARDIS module is a work in progress, and as such the documentation is far from complete!"),(0,a.kt)("p",null,"A sonic blaster, or squareness gun, is a type of weapon available in the 51st century. They were produced at the\nVillengard factory, until it was destroyed by the Doctor, and replaced by banana groves."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Bananas are good")),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# the maximum effective distance of the blaster\nmax_blocks: 10\n# the amount of time in seconds between blaster uses\ncooldown: 5\ntachyon_use:\n  # maximum charge the blaster can hold\n  max: 1000\n  # amount the blaster recharges when close to a TARDIS recharger\n  recharge: 25\n  # the time in ticks between adding recharge amount - 1200 = 60 seconds\n  recharge_interval: 1200\n  # the amount of tachyon energy to use per block removed\n  remove_per_block: 10\n  # the amount of tachyon energy to use to restore a removed block\n  restore_per_block: 20\nrecipes:\n  # recipe for the sonic blaster\n  Sonic Blaster:\n    shape: DTD,TST,EBE\n    ingredients:\n      D: DISPENSER\n      T: TNT\n      S: GLOWSTONE_DUST=Sonic Oscillator\n      E: BUCKET=Blaster Battery\n      B: OAK_BUTTON\n    result: GOLDEN_HOE\n    amount: 1\n    lore: 'The Squareness Gun'\n  # recipe for the blaster battery\n  Blaster Battery:\n    shape: -S-,-R-,-B-\n    ingredients:\n      S: ORANGE_STAINED_GLASS\n      R: REDSTONE\n      B: BUCKET\n    result: BUCKET\n    amount: 1\n    lore: ''\n  # recipe for the landing pad\n  Landing Pad:\n    shape: -C-,-S-,-R-\n    ingredients:\n      C: WHITE_CARPET\n      S: SLIME_BLOCK\n      R: REPEATER\n    result: SLIME_BLOCK\n    amount: 1\n    lore: ''\n")),(0,a.kt)("h2",{id:"use"},"Use"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},'The blaster uses digital technology to create a sonic wave, projected into the form of pulsing squares of blue light,\nwhich could can through thick walls. It also has a reverse function which can replace the removed chunk of material\nafterwards. This is deemed a "special feature" of the blaster, and is said to use up a lot of the batteries on which\nit runs.')),(0,a.kt)("h2",{id:"landing-pad"},"Landing pad"),(0,a.kt)("p",null,"Can't remember what this does..."))}d.isMDXComponent=!0}}]);